name : Build Addon - Automation

on:
  pull_request:
    types: [ opened, reopened ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Set environment variables
        run: |
          echo "DEV_ADDON_URL=https://03c9-122-172-82-170.ngrok-free.app" >> $GITHUB_ENV
          echo "BLACKPEARL_ADDON_URL=https://blackpearl-kibbutz.testsigma.com" >> $GITHUB_ENV
          echo "DEVTESTING_ADDON_URL=https://devtesting-kibbutz.testsigma.com" >> $GITHUB_ENV
          echo "PRESTAGING_ADDON_URL=https://prestaging-kibbutz.testsigma.com" >> $GITHUB_ENV
          echo "STAGING_ADDON_URL=https://staging-kibbutz.testsigma.com" >> $GITHUB_ENV
          echo "PROD_ADDON_URL=https://app-kibbutz.testsigma.com" >> $GITHUB_ENV
          echo "GIT_BRANCH=fix/dev-action-main" >> $GITHUB_ENV

      - name : SSH repo access
        uses:  webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY}}

      - name: Setup Java version
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Install xmlstarlet
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet
          changed_files=$(git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}")      
          echo "Changed files : $changed_files"

      - name: Detect changed directories
        id: changes
        run: |
          changed_files=$(git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}")
          echo "Changed files : $changed_files"
          changed_dirs=$(dirname $changed_files | sort -u)
          echo "Changed dirs : $changed_dirs"
          root_dirs=()
          for dir in $changed_dirs; do
            if [[ $dir != *".github"* ]]; then
              relative_dir="$dir"
              echo "Relative : $relative_dir"
              while [[ ! -f "$relative_dir/pom.xml" ]]; do
                relative_dir=$(dirname "$relative_dir")
                echo "-- relative : $relative_dir"
              done
              if [[ -f "$relative_dir/pom.xml" ]]; then
                root_dirs+=("$relative_dir")
              fi
            fi
          done
          echo "::set-output name=directories::${root_dirs[@]}"

      - name: Display changed directories
        run: |
          echo "Changed directories: ${{ steps.changes.outputs.directories }}"

      - name: Build and commit changes
        run: |
          for dir in ${{ steps.changes.outputs.directories }}; do
            echo "Building $dir"
            cd $dir
            version=$(xmlstarlet sel -t -v "/*[local-name()='project']/*[local-name()='version']" -n pom.xml)
            echo "Addon latest version : $version"
            mvn clean install
            echo "Copy build files to the /build/$version/ location"
            zip -r $dir_source.zip .
            sudo mkdir -p /build/$version
            sudo cp $dir_source.zip /build/$version
            sudo cp target/$dir.jar target/original-$dir.jar /build/$version/
            ls /build/$version
            echo "Committing the changes"
            pwd
            ls
            echo "Actor : $github.actor"
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"
            git config --global user.name "${{ github.actor }}"
            git branch -a   
            git checkout $GIT_BRANCH
            git add .
            git commit -m "build files added to the path $dir/build/$version"
            git push origin $GIT_BRANCH
            curl --location --request PUT '${{ env.DEV_ADDON_URL }}/api/v1/plugins' \
            --header 'Authorization: Bearer ${{ secrets.DEV_V1_TOKEN }}' \
            --form 'sourceCode=@"/build/$version/$dir_source.zip"' \
            --form 'buildTool="MAVEN"' \
            --form 'isDefault="true"'
          done
          
      



